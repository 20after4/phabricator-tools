#!/usr/bin/env python
# encoding: utf-8

"""Arcyd automates the creation and landing of reviews from branches"""

import argparse
import datetime
import sys
import time

import abdcmd_default
import abdmail_printsender
import abdmail_mailer
import phlsys_conduit
import phlsys_subprocess


class ConsoleOutput(object):

    def __init__(self):
        self.last_output = ""

    def display(self, s):
        sys.stdout.write("\r" + " " * len(self.last_output))
        now = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        self.last_output = "(" + now + ") " + s
        sys.stdout.write("\r" + self.last_output)
        sys.stdout.flush()


def main():
    parser = argparse.ArgumentParser(
        description="Arcyd - arcanist branch daemon")

    # TODO: add help messages
    parser.add_argument('--instance-uri', type=str, required=True)
    parser.add_argument('--arcyd-user', type=str, required=True)
    parser.add_argument('--arcyd-certificate', type=str, required=True)
    parser.add_argument('--arcyd-email', type=str, required=True)
    parser.add_argument('--admin-email', type=str, required=True)
    parser.add_argument('--repo-description', type=str, required=True)
    parser.add_argument('--https-proxy', type=str)
    parser.add_argument('--sleep-duration-secs', type=int, default=60)
    args = parser.parse_args()

    print_sender = abdmail_printsender.MailSender(args.arcyd_email)
    mailer = abdmail_mailer.Mailer(
        print_sender,
        [args.admin_email],
        args.repo_description)


    out = ConsoleOutput()
    while True:
        out.display("fetch: ")
        phlsys_subprocess.runCommands("git fetch -p")

        # XXX: until conduit refreshes the connection, we'll suffer from
        #      timeouts; reduce the probability of this by using a new
        #      conduit each time.
        conduit = phlsys_conduit.Conduit(
            args.instance_uri,
            args.arcyd_user,
            args.arcyd_certificate,
            https_proxy=args.https_proxy)

        out.display("process: ")
        abdcmd_default.processUpdatedRepo(conduit, ".", "origin", mailer)

        sleep_remaining = args.sleep_duration_secs
        while sleep_remaining > 0:
            out.display("sleep (" + str(sleep_remaining) + " seconds) ")
            time.sleep(1)
            sleep_remaining -= 1


if __name__ == "__main__":
    sys.exit(main())

#------------------------------------------------------------------------------
# Copyright (C) 2012 Bloomberg L.P.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to
# deal in the Software without restriction, including without limitation the
# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.
#------------------------------- END-OF-FILE ----------------------------------
